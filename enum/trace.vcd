$version Generated by VerilatedVcd $end
$date Wed Jul 10 13:52:34 2024 $end
$timescale 1ms $end

 $scope module TOP $end
  $scope module svsimTestbench $end
   $var wire  1 * clock [0:0] $end
   $var wire 32 / io_a [31:0] $end
   $var wire  2 , io_anEnum [1:0] $end
   $var wire 32 . io_b [31:0] $end
   $var wire  1 - io_loadValues [0:0] $end
   $var wire 32 $ io_result [31:0] $end
   $var wire  1 # io_resultIsValid [0:0] $end
   $var wire  1 + reset [0:0] $end
   $scope module dut $end
    $var wire  1 * clock $end
    $var wire 32 / io_a [31:0] $end
    $var wire 32 / io_a_0 [31:0] $end
    $var wire  2 , io_anEnum [1:0] $end
    $var wire  2 , io_anEnum_0 [1:0] $end
    $var wire 32 . io_b [31:0] $end
    $var wire 32 . io_b_0 [31:0] $end
    $var wire  1 - io_loadValues $end
    $var wire  1 - io_loadValues_0 $end
    $var wire 32 $ io_result [31:0] $end
    $var wire  1 # io_resultIsValid $end
    $var wire  1 # io_resultIsValid_0 $end
    $var wire 32 $ io_result_0 [31:0] $end
    $var wire 32 & myTmpVal [31:0] $end
    $var wire 32 ' myTmpVal2 [31:0] $end
    $var wire 32 ' myTmpVal3 [31:0] $end
    $var wire  1 + reset $end
    $var wire 32 $ x [31:0] $end
    $var wire 32 % y [31:0] $end
    $scope module fsm $end
     $var wire  1 # bo $end
     $var wire  1 * clock $end
     $var wire  1 # io_in $end
     $var wire  1 # io_inDebug $end
     $var wire  1 # io_in_0 $end
     $var wire  1 ( io_out $end
     $var wire  1 + reset $end
     $var wire  2 ) state [1:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
0(
b00 )
0*
0+
b00 ,
1-
b00000000000000000000000000100100 .
b00000000000000000000000000011000 /
#1
0#
b00000000000000000000000000011000 $
b00000000000000000000000000100100 %
b11111111111111111111111111110100 &
b00000000000000000000000000001100 '
b01 )
1*
#2
0*
b10 ,
0-
#3
b00000000000000000000000000001100 %
b00000000000000000000000000001100 &
b11111111111111111111111111110100 '
b00 )
1*
#4
0*
#5
b00000000000000000000000000001100 $
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
1*
#6
0*
#7
1#
b00000000000000000000000000000000 %
b00000000000000000000000000001100 &
b11111111111111111111111111110100 '
1*
#8
b01 ,
